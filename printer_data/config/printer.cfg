
# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu




#####################################################################
#         INCLUDES
#####################################################################
[include mainsail.cfg]
#[include KAMP_Settings.cfg]
#[include orbitersensor.cfg]
#[include ebb36.cfg]
[include neo.cfg]
[include mainsail.cfg]
[include displaymenu.cfg]
#[include moonraker_obico_macros.cfg]
[include KMMacros.cfg]
[exclude_object]
[include nevermore.cfg]
[include autospeed.cfg]
#[include hbb.cfg]
[include komb.cfg]
#####################################################################
#               Hardware config
#####################################################################
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.2 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and [_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info    check https://docs.vorondesign.com/build/startup/#v0


             ########EB36##############
[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
#canbus_uuid: 1805c308152d
canbus_uuid:a72977c534a8
# EBB36 temperature
[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 101

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
probe_points: 60, 60, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.4                              #define nozzle diameter
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: Pt1000
sensor_pin: EBBCan: PA3
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 350
min_extrude_temp: 170
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
max_extrude_cross_section: 10
pressure_advance: 0.025                     #to be calibrated
pressure_advance_smooth_time: 0.03     #to be calibrated

sensor_type:MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: True ##from orbiter cfg
run_current: 0.85 ##from Orbiter cfg
sense_resistor: 0.11
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder
driver_TBL: 0 ##from Orbiter cfg
driver_HEND: 6 ##from Orbiter cfg
driver_HSTRT: 7 ##from Orbiter cfg
driver_TOFF: 4 ##from Orbiter cfg

[fan]
pin: EBBCan: PA1
#max_power: 0.5 ##DUTY CYCLE FOR 12v FANS
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: .8                                                    # You can't PWM the delta fan unless using blue wire



########Chamber Thermistor#######
#################################
[temperature_sensor chamber]
sensor_type:Generic 3950
sensor_pin:gpio27


[mcu]
#####################################################################
#      Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_4547415054052B4A-if00

## serial: /dev/ttyAMA0 											# for UART connection
restart_method: command


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[printer]
kinematics: corexy
#max_velocity: 300
#max_accel: 8000
max_velocity: 350
max_accel: 14000
max_z_velocity: 20
max_z_accel: 300
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[input_shaper]
shaper_freq_x: 68
shaper_type_x: mzv
shaper_freq_y: 56.6
shaper_type_y: mzv
damping_ratio_x: 0.066 # damping ratio for the X axis
damping_ratio_y: 0.062 # damping ratio for the Y axis

[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
position_min: -1
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
run_current: 0.69            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 55  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
position_min: -1
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
run_current: 0.69            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 50  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^gpio25
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0


[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
#run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
#run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

[controller_fan MCU_fan]
pin: gpio20
max_power: 1.0
kick_start_time: 0.5
heater: extruder
#fan_speed: 1.0 

[temperature_fan raspberry_pi]
pin: CB1:gpio211
kick_start_time: 0.8
#shutdown_speed: 0
off_below: 0.1
max_power: 1.0
#fan_speed: 0.6
sensor_type: temperature_host
control: pid
min_temp: 0
max_temp: 85
#max_delta: 5.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
min_speed: 0.1
max_speed: 0.6
target_temp: 38

#####################################################################
#   Probe
#####################################################################

[probe] ## Other parameters in config.cfg
pin: !EBBCan:PB6
x_offset: 0.0
y_offset: 0.0
#z_offset: 0.0
speed: 20.0 #   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
sample_retract_dist: 3.0
samples_tolerance_retries: 1
lift_speed: 10
activate_gcode:
    G4 P200 ;Wait 200ms
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.2
  
deactivate_gcode:
    {% set run_current = printer.configfile.config['tmc2209 stepper_z'].run_current | float %}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={run_current}
    

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min:15, 15 
mesh_max: 105, 105
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic



#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor filament_switch]
switch_pin: ^CB1:gpio67    # Use the correct pin for your mainboard.
pause_on_runout: False
runout_gcode: _FS_RUNOUT

[filament_motion_sensor filament_motion]
switch_pin: ^CB1:gpio71    # Use the correct pin for your mainboard.
extruder: extruder
pause_on_runout: False
detection_length: 4
runout_gcode: _FS_RUNOUT

    ##################################
    #   Filament Runout Sensor Macros
    ##################################
[gcode_macro _FS_RUNOUT]
gcode:
  M300 S660 P300  ; BEE
  M300 S440 P300  ; BOOP
  RESPOND TYPE=error MSG="Filament Runout"  ; Display a console message
  M117 "Filament Runout"  ; Display a message on the LCD
  PAUSE   ; Call the pause macro

  

#################
     ##Variables#
#################
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 20.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 7.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 55.0  ; retract speed in mm/s
variable_unretract        : 8.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 200.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode: 
    GCODE_ON_PRINT_STATUS STATUS=calibrating_z COMMAND=sb_logo_calibrating_z WHEN=ALWAYS TYPE=ENTER
    GCODE_ON_PRINT_STATUS STATUS=homing COMMAND=sb_logo_homing WHEN=ALWAYS TYPE=ENTER
    GCODE_ON_PRINT_STATUS STATUS=extruder_heating COMMAND=status_heating WHEN=ALWAYS TYPE=ENTER
    GCODE_ON_PRINT_STATUS STATUS=ready COMMAND=leds_off WHEN=ALWAYS TYPE=ENTER




#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28.6245197 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28.6245197 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28.6245197 Z
    G1 Z30


[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    #status_homing
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}
   set_nozzle_leds_off
   
#[safe_z_home]
##home_xy_position: 120,120 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,15
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 110,115
screw3_name: back right

[screws_tilt_adjust]
screw1: 60,15
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 110,115
screw3_name: back right
horizontal_move_z: 5
speed: 50.
screw_thread: CW-M3

#####################################################################
#Servo
#####################################################################

[servo Brush]
pin:gpio29
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 180
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.001
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.004
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle:30
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.

[gcode_macro Brush_out]
gcode:
       SET_SERVO SERVO=Brush ANGLE=88

[gcode_macro Brush_in]
gcode:
       SET_SERVO SERVO=Brush ANGLE=30       






#######Shake and tune####

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#########gcode status events####

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 118.910
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.985
#*# pid_ki = 3.058
#*# pid_kd = 64.016
#*#
#*# [probe]
#*# z_offset = -0.236
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.479000, -0.355250, -0.287750
#*# 	-0.312750, -0.205875, -0.188375
#*# 	-0.299000, -0.212750, -0.182750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 12.0
#*# max_x = 54.94
#*# min_y = 10.0
#*# max_y = 53.16
